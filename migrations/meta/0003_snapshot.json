{
  "version": "6",
  "dialect": "postgresql",
  "tables": {
    "public.cycles": {
      "name": "cycles",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "event_id": {
          "name": "event_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "start_at": {
          "name": "start_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "end_at": {
          "name": "end_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": false,
          "default": "'UPCOMING'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "cycles_event_id_events_id_fk": {
          "name": "cycles_event_id_events_id_fk",
          "tableFrom": "cycles",
          "columnsFrom": [
            "event_id"
          ],
          "tableTo": "events",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.events": {
      "name": "events",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "image_url": {
          "name": "image_url",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "event_display_rank": {
          "name": "event_display_rank",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.federated_credentials": {
      "name": "federated_credentials",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "provider": {
          "name": "provider",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "subject": {
          "name": "subject",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "federated_credentials_user_id_users_id_fk": {
          "name": "federated_credentials_user_id_users_id_fk",
          "tableFrom": "federated_credentials",
          "columnsFrom": [
            "user_id"
          ],
          "tableTo": "users",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "provider_subject_idx": {
          "name": "provider_subject_idx",
          "columns": [
            "provider",
            "subject"
          ],
          "nullsNotDistinct": false
        }
      }
    },
    "public.forum_questions": {
      "name": "forum_questions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "cycle_id": {
          "name": "cycle_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "question_title": {
          "name": "question_title",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": true
        },
        "question_sub_title": {
          "name": "question_sub_title",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "forum_questions_cycle_id_cycles_id_fk": {
          "name": "forum_questions_cycle_id_cycles_id_fk",
          "tableFrom": "forum_questions",
          "columnsFrom": [
            "cycle_id"
          ],
          "tableTo": "cycles",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.groups": {
      "name": "groups",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.users": {
      "name": "users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "username": {
          "name": "username",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "users_username_unique": {
          "name": "users_username_unique",
          "columns": [
            "username"
          ],
          "nullsNotDistinct": false
        },
        "users_email_unique": {
          "name": "users_email_unique",
          "columns": [
            "email"
          ],
          "nullsNotDistinct": false
        }
      }
    },
    "public.registrations": {
      "name": "registrations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "event_id": {
          "name": "event_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false,
          "default": "'DRAFT'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "registrations_user_id_users_id_fk": {
          "name": "registrations_user_id_users_id_fk",
          "tableFrom": "registrations",
          "columnsFrom": [
            "user_id"
          ],
          "tableTo": "users",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        },
        "registrations_event_id_events_id_fk": {
          "name": "registrations_event_id_events_id_fk",
          "tableFrom": "registrations",
          "columnsFrom": [
            "event_id"
          ],
          "tableTo": "events",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.registration_field_options": {
      "name": "registration_field_options",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "registration_field_id": {
          "name": "registration_field_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "registration_field_options_registration_field_id_registration_fields_id_fk": {
          "name": "registration_field_options_registration_field_id_registration_fields_id_fk",
          "tableFrom": "registration_field_options",
          "columnsFrom": [
            "registration_field_id"
          ],
          "tableTo": "registration_fields",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.question_options": {
      "name": "question_options",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "registration_data_id": {
          "name": "registration_data_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "question_id": {
          "name": "question_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "option_title": {
          "name": "option_title",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": true
        },
        "option_sub_title": {
          "name": "option_sub_title",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "accepted": {
          "name": "accepted",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "vote_count": {
          "name": "vote_count",
          "type": "numeric",
          "primaryKey": false,
          "notNull": true,
          "default": "'0.0'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "question_options_registration_data_id_registration_data_id_fk": {
          "name": "question_options_registration_data_id_registration_data_id_fk",
          "tableFrom": "question_options",
          "columnsFrom": [
            "registration_data_id"
          ],
          "tableTo": "registration_data",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        },
        "question_options_question_id_forum_questions_id_fk": {
          "name": "question_options_question_id_forum_questions_id_fk",
          "tableFrom": "question_options",
          "columnsFrom": [
            "question_id"
          ],
          "tableTo": "forum_questions",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.votes": {
      "name": "votes",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "option_id": {
          "name": "option_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "question_id": {
          "name": "question_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "num_of_votes": {
          "name": "num_of_votes",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "votes_user_id_users_id_fk": {
          "name": "votes_user_id_users_id_fk",
          "tableFrom": "votes",
          "columnsFrom": [
            "user_id"
          ],
          "tableTo": "users",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        },
        "votes_option_id_question_options_id_fk": {
          "name": "votes_option_id_question_options_id_fk",
          "tableFrom": "votes",
          "columnsFrom": [
            "option_id"
          ],
          "tableTo": "question_options",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        },
        "votes_question_id_forum_questions_id_fk": {
          "name": "votes_question_id_forum_questions_id_fk",
          "tableFrom": "votes",
          "columnsFrom": [
            "question_id"
          ],
          "tableTo": "forum_questions",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.registration_fields": {
      "name": "registration_fields",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "event_id": {
          "name": "event_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "type": {
          "name": "type",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true,
          "default": "'TEXT'"
        },
        "required": {
          "name": "required",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "question_id": {
          "name": "question_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "fields_display_rank": {
          "name": "fields_display_rank",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "character_limit": {
          "name": "character_limit",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "registration_fields_event_id_events_id_fk": {
          "name": "registration_fields_event_id_events_id_fk",
          "tableFrom": "registration_fields",
          "columnsFrom": [
            "event_id"
          ],
          "tableTo": "events",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        },
        "registration_fields_question_id_forum_questions_id_fk": {
          "name": "registration_fields_question_id_forum_questions_id_fk",
          "tableFrom": "registration_fields",
          "columnsFrom": [
            "question_id"
          ],
          "tableTo": "forum_questions",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.registration_data": {
      "name": "registration_data",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "registration_id": {
          "name": "registration_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "registration_field_id": {
          "name": "registration_field_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "registration_data_registration_id_registrations_id_fk": {
          "name": "registration_data_registration_id_registrations_id_fk",
          "tableFrom": "registration_data",
          "columnsFrom": [
            "registration_id"
          ],
          "tableTo": "registrations",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        },
        "registration_data_registration_field_id_registration_fields_id_fk": {
          "name": "registration_data_registration_field_id_registration_fields_id_fk",
          "tableFrom": "registration_data",
          "columnsFrom": [
            "registration_field_id"
          ],
          "tableTo": "registration_fields",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.users_to_groups": {
      "name": "users_to_groups",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "group_id": {
          "name": "group_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "users_to_groups_user_id_users_id_fk": {
          "name": "users_to_groups_user_id_users_id_fk",
          "tableFrom": "users_to_groups",
          "columnsFrom": [
            "user_id"
          ],
          "tableTo": "users",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        },
        "users_to_groups_group_id_groups_id_fk": {
          "name": "users_to_groups_group_id_groups_id_fk",
          "tableFrom": "users_to_groups",
          "columnsFrom": [
            "group_id"
          ],
          "tableTo": "groups",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.user_attributes": {
      "name": "user_attributes",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "attribute_key": {
          "name": "attribute_key",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "attribute_value": {
          "name": "attribute_value",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "user_attributes_user_id_users_id_fk": {
          "name": "user_attributes_user_id_users_id_fk",
          "tableFrom": "user_attributes",
          "columnsFrom": [
            "user_id"
          ],
          "tableTo": "users",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    }
  },
  "enums": {},
  "schemas": {},
  "_meta": {
    "schemas": {},
    "tables": {},
    "columns": {}
  },
  "id": "b4cad161-67c6-46f2-8333-b6c5299a56a7",
  "prevId": "416dd229-ebe3-4d50-ada1-dea82d2a6b6e"
}